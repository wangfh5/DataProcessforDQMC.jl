var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = DataProcessforDQMC","category":"page"},{"location":"#DataProcessforDQMC","page":"Home","title":"DataProcessforDQMC","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for DataProcessforDQMC.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [DataProcessforDQMC]","category":"page"},{"location":"#DataProcessforDQMC.format_energy-Tuple{String, Vector{String}}","page":"Home","title":"DataProcessforDQMC.format_energy","text":"format_energy(data_dir::String, energy_list::Array{String,1})\n\nFormat the energy.bin in data_dir into a dataframe and store it in a .csv and .toml file. The first column of the energy.bin must be the sign, and the rest columns are the energy values.\n\n\n\n\n\n","category":"method"},{"location":"#DataProcessforDQMC.format_kdata-Tuple{String, Vector{Float64}, String}","page":"Home","title":"DataProcessforDQMC.format_kdata","text":"format_kdata(data_dir::String, sigs::Array{Float64,1}, obsname::String; ifsave::Bool = false)\n\n\n\n\n\n","category":"method"},{"location":"#DataProcessforDQMC.format_onecol-Tuple{String, Vector{Float64}, String}","page":"Home","title":"DataProcessforDQMC.format_onecol","text":"format_onecol(data_dir::String, sigs::Array{Float64,1}, obsname::String; ifsave::Bool = false)\n\nA generic formatter for one-column data with each row corresponding to a bin. Format the obsname.bin in data_dir into a dataframe and store it in a .csv and .toml file. In the .csv file, the first column is the bin index, and the second column is the value of the observable divided by sigs.\n\n\n\n\n\n","category":"method"},{"location":"#DataProcessforDQMC.format_pair_onsite_edge-Tuple{String, Vector{Float64}}","page":"Home","title":"DataProcessforDQMC.format_pair_onsite_edge","text":"format_pair_onsite_edge(data_dir::String, sigs::Array{Float64,1})\n\nFormat the pair_onsite_edge.bin, pair_onsite_interedges.bin and pair_onsite_intraedges.bin in data_dir into a dataframe and store it in a .csv and .toml file.\n\n\n\n\n\n","category":"method"},{"location":"#DataProcessforDQMC.format_pair_onsite_r-Tuple{String, Vector{Float64}, Int64}","page":"Home","title":"DataProcessforDQMC.format_pair_onsite_r","text":"format_pair_onsite_r(data_dir::String, sigs::Array{Float64,1}, L::Int)\n\nFormat the pair_onsite_r.bin in data_dir into a dataframe and store it in a .csv and .toml file. For now, only support one sublattice system. This function support old-fashioned output data, i.e., only output the values without the coordinates, so users need to specify the lattice size L. Just a compatibility function for old-fashioned output, and will be deprecated in the future.\n\n\n\n\n\n","category":"method"},{"location":"#DataProcessforDQMC.format_rdata-Tuple{String, Vector{Float64}, String}","page":"Home","title":"DataProcessforDQMC.format_rdata","text":"format_rdata(data_dir::String, sigs::Array{Float64,1}, obsname::String; ifsave::Bool = false)\n\nA generic formatter for r-dependent data with each row corresponding to a bin and a spatial position. Format the obsname.bin in data_dir into a dataframe and store it in a .csv and .toml file. For now, only support one sublattice system. In the .csv file, the first column is the bin index, the second and third columns are the x and y coordinates, and the fourth column is the value of the observable divided by sigs.\n\n\n\n\n\n","category":"method"},{"location":"#DataProcessforDQMC.insert_parameters_cols-Tuple{DataFrames.DataFrame, String}","page":"Home","title":"DataProcessforDQMC.insert_parameters_cols","text":"insert_parameters_cols(df::DataFrame,data_dir::String)\n\nExact parameters from data_dir and insert them as columns into df. e.g. data_dir = \".../proj_majo_cy.b16.000.U-4.00.Delta_ppm0.4.mu-0.5.L8.dtau0.05/\"  will extract beta, U, Delta_ppm, mu, L and dtau from it.\n\n\n\n\n\n","category":"method"},{"location":"#DataProcessforDQMC.read_format_data-Tuple{String, String}","page":"Home","title":"DataProcessforDQMC.read_format_data","text":"read_format_data(dataname::String, data_dir::String)\n\nRead dataname.csv and dataname.toml in data_dir.\n\n\n\n\n\n","category":"method"},{"location":"#DataProcessforDQMC.write_df-Tuple{DataFrames.DataFrame, String, String}","page":"Home","title":"DataProcessforDQMC.write_df","text":"write_df(df::DataFrame, data_dir::String, dataname::String)\n\nWrite df into data_dir/formatted_data/dataname.csv and data_dir/formatted_data/dataname.toml.\n\n\n\n\n\n","category":"method"}]
}
